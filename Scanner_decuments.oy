import cv2
import numpy as np
 
 
#     عرض طويل، أدناه هو نسبة ورقة A4
 x = 420 #
 ذ = 600 #
 
def preProcessor(img):
    """
         الصورة preoperation.
    """
         رمادي = cv2.cvtcolor (img، cv2.color_bgr2gray) # رمادي
         غير واضحة = CV2.BilideFilter (رمادي، 2، 200، 200) # الحد من الضوضاء الثنائية
         rolded = cv2.cnny (غير واضحة، 25، 200) تحديد الحافة
         rolded = cv2.dilate (rolded، cv2.getsureLemement (cv2.morph_rect، (3، 3))) # #
         cnts = cv2.findcontours (rold.copy ()، cv2.retr_external، cv2.chain_prox_simple #    
         CNTS = CNTS [1] # الخطوط العريضة الخارجية
         DOCCNT = لا شيء # كفاف المستند
    
         # تأكد من العثور على محيط
    if len(cnts) > 0:
                 #            
        cnts = sorted(cnts, key=cv2.contourArea, reverse=True)
        for c in cnts:
                         #      
                         peri = cv2.arclength (c، true) # احصل على أسبوع
                         تقريبا = cv2.appoxpolydp (c، 0.02 * peri، true) # Polygon Fitting، وردة مضلع الإخراج
                         # إذا كان لديك كونتور التقريبي لدينا أربعة رؤوس، فحدد أن المستند موجود.
            if len(approx) == 4:
                docCnt = approx
                break
         cv2.polylines (img، [doccnt]، صحيح، (0، 255، 0)، 3) #DRAW الخطوط العريضة
    return [i[0] for i in docCnt]
 
 
def transform(img, mp, dp):
    """
         تحويل المنظور، النائب: نقطة الصورة الأصلية، موانئ دبي: نقطة الصورة المستهدفة
    """
    global x
    global y
         # تعديل تنسيق النقطة
    pts1 = np.float32(mp)
    pts2 = np.float32(dp)
     
         #       مصفوفة
    M = cv2.getPerspectiveTransform(pts1, pts2)
     
         #    .
    dst = cv2.warpPerspective(img, M, (x, y))
    return dst
 
 
def enhance(img):
    """
         عرض المعزز
    """
    dst = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
         # العتبة التكيفية
    th = cv2.adaptiveThreshold(dst, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, 11, 5)
    return th
 
 
def show(img):
    """
         رسم
    """
    global x
    global y
    cv2.imshow('Scanner', img)
    k = cv2.waitKey(0)
         إذا كان k == 27: # اضغط ESC للخروج
        cv2.destroyAllWindows()
         elif k == ord ('r'): # اضغط R تدوير النتائج
        init = [[0, 0], [x, 0], [x, y], [0, y]]
        dstp = init[1:] + init[:1]
        img = transform(img, init, dstp)
        show(img)
         elif k == ord ('s'): # الصحافة S حفظ الصور
        cv2.imwrite('Scanned5.png')
 
 
if __name__ == "__main__":
    img = cv2.imread("doc2.jpg")
    src = img.copy()
    mp = preProcessor(img)
    cv2.imshow('Result', img)
    dp = [[0, y], [x, y], [x, 0], [0, 0]]
    docimg = transform(src, mp, dp)
    docimg = enhance(docimg)
    cv2.namedWindow('Scanner', cv2.WINDOW_NORMAL)
    show(docimg)
